name: Unit tests

on: [push]

env:
  RUST_BACKTRACE: full

jobs:
  unit:
    name: "Unit Tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Cache Rust build
        uses: actions/cache@v2
        env:
          cache-name: rust-build
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-build-${{ hashFiles('Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('Cargo.toml') }}
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Rust compiler
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            default: true
            override: true
            components: rustfmt, clippy

      - name: "Build"
        run: cargo build --release

      - name: "Synthesize rational rules"
        run: cargo rational --iters 2 --variables 3 --num-fuzz 50 --do-final-run --outfile rat.json

      - name: "Synthesize rational rules (EMA)"
        run: cargo rational --iters 2 --variables 3 --ema-above-iter 1 --num-fuzz 50 --do-final-run --outfile rat.json

      - name: "Synthesize rational rules (EMA, no consts)"
        run: cargo rational --iters 2 --variables 3 --ema-above-iter 1 --no-constants-above-iter 1 --num-fuzz 50 --do-final-run --outfile rat.json

      - name: "Synthesize bv4 rules"
        run: cargo bv4 --iters 2 --variables 3 --outfile bv4.json

      - name: "Synthesize bv32 rules"
        run: cargo bv4 --iters 2 --variables 3 --outfile bv32.json

      - name: "Synthesize real rules from rational rules (rule lifting)"
        run: cargo real-rat --iters 2 --variables 3 --no-constants-above-iter 1 --prior-rules rat.json --outfile real.json

      # Need to filter out rational rules from real.json
      # - name: "Synthesize complex rules from real rules (rule lifting, no constants)"
      #   run: cargo complex-real --iters 2 --variables 3 --no-constants-above-iter 0 --prior-rules real.json --outfile complex.json
