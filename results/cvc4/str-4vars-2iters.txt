(define-fun f ((x String) (y String) (z String) (i Int)) String x)
(define-fun f ((x String) (y String) (z String) (i Int)) String y)
(define-fun f ((x String) (y String) (z String) (i Int)) String z)
(define-fun f ((x String) (y String) (z String) (i Int)) String "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z i))
(rewrite (str.at "" 0) "")
(rewrite (str.at "" 1) "")
(rewrite (str.at "" i) "")
(rewrite (str.substr x 0 0) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 i))
(rewrite (str.substr x 1 0) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 i))
(rewrite (str.substr x i 0) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr y 0 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr y 0 i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr y 1 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr y 1 i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr y i 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr y i i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr z 0 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr z 0 i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr z 1 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr z 1 i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr z i 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr z i i))
(rewrite (str.substr "" 0 i) "")
(rewrite (str.substr "" 1 i) "")
(rewrite (str.substr "" i i) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.++ x x))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.++ x y))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.++ x z))
(rewrite (str.++ x "") x)
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.++ y x))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.++ y y))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.++ y z))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.++ z x))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.++ z y))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.++ z z))
(rewrite (str.++ "" x) x)
(rewrite (str.replace x x x) x)
(rewrite (str.replace x x y) y)
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace x y x))
(rewrite (str.replace x y y) x)
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace x y z))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace x y ""))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace x z x))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace x z y))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace x z ""))
(rewrite (str.replace x "" x) (str.++ x x))
(rewrite (str.replace x "" y) (str.++ y x))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace y x y))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace y x z))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace y x ""))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace y z x))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace y z y))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace y z ""))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace z x y))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace z x z))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace z x ""))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace z y x))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace z y z))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace z y ""))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace "" x y))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace "" x z))
(rewrite (str.replace "" x "") "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace "" y x))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace "" y z))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace "" z x))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.replace "" z y))
(rewrite (str.from_int (- 0 0)) (str.from_int 0))
(rewrite (str.from_int (+ 0 0)) (str.from_int 0))
(rewrite (str.from_int (- 0 1)) "")
(rewrite (str.from_int (+ 0 1)) (str.from_int 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (- 0 i)))
(rewrite (str.from_int (+ 0 i)) (str.from_int i))
(rewrite (str.from_int (- 1 0)) (str.from_int 1))
(rewrite (str.from_int (+ 1 0)) (str.from_int 1))
(rewrite (str.from_int (- 1 1)) (str.from_int 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (+ 1 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (- 1 i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (+ 1 i)))
(rewrite (str.from_int (- i 0)) (str.from_int i))
(rewrite (str.from_int (+ i 0)) (str.from_int i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (- i 1)))
(rewrite (str.from_int (+ i 1)) (str.from_int (+ 1 i)))
(rewrite (str.from_int (- i i)) (str.from_int 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (+ i i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.len x)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.to_int x)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.len y)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.to_int y)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.len z)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.to_int z)))
(rewrite (str.from_int (str.len "")) (str.from_int 0))
(rewrite (str.from_int (str.to_int "")) "")
(rewrite (str.from_int (str.indexof x x 0)) (str.from_int 0))
(rewrite (str.from_int (str.indexof x x 1)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof x x i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof x y 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof x y 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof x y i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof x z 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof x z 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof x z i)))
(rewrite (str.from_int (str.indexof x "" 0)) (str.from_int 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof x "" 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof x "" i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof y x 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof y x 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof y x i)))
(rewrite (str.from_int (str.indexof y y i)) (str.from_int (str.indexof x x i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof y z 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof y z 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof y z i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof y "" 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof y "" i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof z x 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof z x 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof z x i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof z y 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof z y 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof z y i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof z "" 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof z "" i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof "" x 0)))
(rewrite (str.from_int (str.indexof "" x 1)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof "" x i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof "" y 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof "" y i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof "" z 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.from_int (str.indexof "" z i)))
(rewrite (str.at x (- 0 0)) (str.substr x 0 1))
(rewrite (str.at x (+ 0 0)) (str.substr x 0 1))
(rewrite (str.at x (- 0 1)) "")
(rewrite (str.at x (+ 0 1)) (str.substr x 1 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (- 0 i)))
(rewrite (str.at x (+ 0 i)) (str.substr x i 1))
(rewrite (str.at x (- 1 0)) (str.substr x 1 1))
(rewrite (str.at x (+ 1 0)) (str.substr x 1 1))
(rewrite (str.at x (- 1 1)) (str.substr x 0 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (+ 1 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (- 1 i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (+ 1 i)))
(rewrite (str.at x (- i 0)) (str.substr x i 1))
(rewrite (str.at x (+ i 0)) (str.substr x i 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (- i 1)))
(rewrite (str.at x (+ i 1)) (str.at x (+ 1 i)))
(rewrite (str.at x (- i i)) (str.substr x 0 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (+ i i)))
(rewrite (str.at x (str.len x)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.to_int x)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.len y)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.to_int y)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.len z)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.to_int z)))
(rewrite (str.at x (str.len "")) (str.substr x 0 1))
(rewrite (str.at x (str.to_int "")) "")
(rewrite (str.at x (str.indexof x x 0)) (str.substr x 0 1))
(rewrite (str.at x (str.indexof x x 1)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof x x i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof x y 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof x y 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof x y i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof x z 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof x z 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof x z i)))
(rewrite (str.at x (str.indexof x "" 0)) (str.substr x 0 1))
(rewrite (str.at x (str.indexof x "" 1)) (str.substr x 1 1))
(rewrite (str.at x (str.indexof x "" i)) (str.substr x i 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof y x 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof y x 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof y x i)))
(rewrite (str.at x (str.indexof y y 0)) (str.substr x 0 1))
(rewrite (str.at x (str.indexof y y 1)) "")
(rewrite (str.at x (str.indexof y y i)) (str.at x (str.indexof x x i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof y z 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof y z 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof y z i)))
(rewrite (str.at x (str.indexof y "" 0)) (str.substr x 0 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof y "" 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof y "" i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof z x 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof z x 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof z x i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof z y 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof z y 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof z y i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof z "" 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof z "" i)))
(rewrite (str.at x (str.indexof "" x 0)) "")
(rewrite (str.at x (str.indexof "" x 1)) "")
(rewrite (str.at x (str.indexof "" x i)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof "" y 0)))
(rewrite (str.at x (str.indexof "" y 1)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof "" y i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof "" z 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at x (str.indexof "" z i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (- 0 i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (+ 1 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (- 1 i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (+ 1 i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (- i 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (+ i i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.len x)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.to_int x)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.to_int y)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.len z)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.to_int z)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof x x i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof x y 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof x y i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof x z 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof x z 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof x z i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof x "" 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof x "" i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof y x 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof y x 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof y x i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof y z 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof y z 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof y z i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof z x 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof z x 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof z x i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof z y 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof z y 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof z y i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof z "" 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof z "" i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof "" x 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof "" x i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof "" z 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at y (str.indexof "" z i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (- 0 i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (+ 1 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (- 1 i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (+ 1 i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (- i 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (+ i i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.len x)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.to_int x)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.len y)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.to_int y)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.to_int z)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof x x i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof x y 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof x y 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof x y i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof x z 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof x z i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof x "" 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof x "" i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof y x 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof y x 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof y x i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof y z 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof y z 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof y z i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof y "" 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof y "" i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof z x 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof z x 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof z x i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof z y 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof z y 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof z y i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof "" x 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof "" x i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof "" y 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at z (str.indexof "" y i)))
(rewrite (str.at (str.from_int 0) 0) (str.from_int 0))
(rewrite (str.at (str.from_int 0) 1) "")
(rewrite (str.at (str.from_int 0) i) (str.from_int (str.indexof x x i)))
(rewrite (str.at (str.from_int 1) 0) (str.from_int 1))
(rewrite (str.at (str.from_int 1) 1) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.from_int 1) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.from_int i) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.from_int i) 1))
(candidate-rewrite (str.at (str.from_int i) i) (str.from_int (str.indexof x x i)))
(rewrite (str.at (str.at x 0) 0) (str.substr x 0 1))
(rewrite (str.at (str.at x 0) 1) "")
(rewrite (str.at (str.at x 0) i) (str.at x (str.indexof x x i)))
(rewrite (str.at (str.at x 1) 0) (str.substr x 1 1))
(rewrite (str.at (str.at x 1) 1) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.at x 1) i))
(rewrite (str.at (str.at x i) 0) (str.substr x i 1))
(rewrite (str.at (str.at x i) 1) "")
(rewrite (str.at (str.at x i) i) (str.at x (str.indexof x x i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.at y 1) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.at z 1) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr x 0 i) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr x 0 i) 1))
(rewrite (str.at (str.substr x 0 i) i) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr x 1 1) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr x 1 i) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr x 1 i) 1))
(rewrite (str.at (str.substr x 1 i) i) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr x i i) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr x i i) 1))
(rewrite (str.at (str.substr x i i) i) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr y 0 i) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr y 0 i) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr y 1 1) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr y 1 i) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr y 1 i) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr y i i) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr y i i) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr z 0 i) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr z 0 i) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr z 1 1) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr z 1 i) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr z 1 i) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr z i i) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.substr z i i) 1))
(rewrite (str.at (str.++ x x) 0) (str.substr x 0 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ x x) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ x x) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ x y) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ x y) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ x y) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ x z) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ x z) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ x z) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ y x) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ y x) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ y x) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ y y) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ y y) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ y z) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ y z) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ y z) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ z x) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ z x) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ z x) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ z y) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ z y) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ z y) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ z z) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.++ z z) i))
(rewrite (str.at (str.replace x y x) 0) (str.substr x 0 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace x y x) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace x y x) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace x y z) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace x y z) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace x y z) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace x y "") 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace x y "") 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace x y "") i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace x z x) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace x z x) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace x z y) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace x z y) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace x z y) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace x z "") 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace x z "") 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace x z "") i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace y x y) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace y x y) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace y x z) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace y x z) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace y x z) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace y x "") 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace y x "") 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace y x "") i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace y z x) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace y z x) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace y z x) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace y z y) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace y z y) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace y z "") 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace y z "") 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace y z "") i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace z x y) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace z x y) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace z x y) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace z x z) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace z x z) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace z x "") 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace z x "") 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace z x "") i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace z y x) 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace z y x) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace z y x) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace z y z) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace z y z) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace z y "") 0))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace z y "") 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace z y "") i))
(rewrite (str.at (str.replace "" x y) 0) (str.at y (str.indexof "" x 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace "" x y) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace "" x y) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace "" x z) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace "" x z) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace "" y x) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace "" y x) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace "" y z) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace "" y z) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace "" z x) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace "" z x) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace "" z y) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.at (str.replace "" z y) i))
(rewrite (str.substr x 0 (- 0 0)) "")
(rewrite (str.substr x 0 (+ 0 0)) "")
(rewrite (str.substr x 0 (- 0 1)) "")
(rewrite (str.substr x 0 (+ 0 1)) (str.substr x 0 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (- 0 i)))
(rewrite (str.substr x 0 (+ 0 i)) (str.substr x 0 i))
(rewrite (str.substr x 0 (- 1 0)) (str.substr x 0 1))
(rewrite (str.substr x 0 (+ 1 0)) (str.substr x 0 1))
(rewrite (str.substr x 0 (- 1 1)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (+ 1 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (- 1 i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (+ 1 i)))
(rewrite (str.substr x 0 (- i 0)) (str.substr x 0 i))
(rewrite (str.substr x 0 (+ i 0)) (str.substr x 0 i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (- i 1)))
(rewrite (str.substr x 0 (+ i 1)) (str.substr x 0 (+ 1 i)))
(rewrite (str.substr x 0 (- i i)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (+ i i)))
(rewrite (str.substr x 0 (str.len x)) x)
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.to_int x)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.len y)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.to_int y)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.len z)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.to_int z)))
(rewrite (str.substr x 0 (str.len "")) "")
(rewrite (str.substr x 0 (str.to_int "")) "")
(rewrite (str.substr x 0 (str.indexof x x 0)) "")
(rewrite (str.substr x 0 (str.indexof x x 1)) "")
(rewrite (str.substr x 0 (str.indexof x x i)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof x y 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof x y 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof x y i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof x z 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof x z 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof x z i)))
(rewrite (str.substr x 0 (str.indexof x "" 0)) "")
(rewrite (str.substr x 0 (str.indexof x "" 1)) (str.substr x 0 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof x "" i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof y x 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof y x 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof y x i)))
(rewrite (str.substr x 0 (str.indexof y y 0)) "")
(rewrite (str.substr x 0 (str.indexof y y 1)) "")
(rewrite (str.substr x 0 (str.indexof y y i)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof y z 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof y z 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof y z i)))
(rewrite (str.substr x 0 (str.indexof y "" 0)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof y "" 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof y "" i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof z x 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof z x 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof z x i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof z y 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof z y 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof z y i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof z "" 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 0 (str.indexof z "" i)))
(rewrite (str.substr x 0 (str.indexof "" x 0)) "")
(rewrite (str.substr x 0 (str.indexof "" x 1)) "")
(rewrite (str.substr x 0 (str.indexof "" x i)) "")
(rewrite (str.substr x 0 (str.indexof "" y 0)) "")
(rewrite (str.substr x 0 (str.indexof "" y 1)) "")
(rewrite (str.substr x 0 (str.indexof "" y i)) "")
(rewrite (str.substr x 1 (- 0 0)) "")
(rewrite (str.substr x 1 (+ 0 0)) "")
(rewrite (str.substr x 1 (- 0 1)) "")
(rewrite (str.substr x 1 (+ 0 1)) (str.substr x 1 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (- 0 i)))
(rewrite (str.substr x 1 (+ 0 i)) (str.substr x 1 i))
(rewrite (str.substr x 1 (- 1 0)) (str.substr x 1 1))
(rewrite (str.substr x 1 (+ 1 0)) (str.substr x 1 1))
(rewrite (str.substr x 1 (- 1 1)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (+ 1 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (- 1 i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (+ 1 i)))
(rewrite (str.substr x 1 (- i 0)) (str.substr x 1 i))
(rewrite (str.substr x 1 (+ i 0)) (str.substr x 1 i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (- i 1)))
(rewrite (str.substr x 1 (+ i 1)) (str.substr x 1 (+ 1 i)))
(rewrite (str.substr x 1 (- i i)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (+ i i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.len x)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.to_int x)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.len y)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.to_int y)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.len z)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.to_int z)))
(rewrite (str.substr x 1 (str.len "")) "")
(rewrite (str.substr x 1 (str.to_int "")) "")
(rewrite (str.substr x 1 (str.indexof x x 0)) "")
(rewrite (str.substr x 1 (str.indexof x x 1)) "")
(rewrite (str.substr x 1 (str.indexof x x i)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof x y 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof x y 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof x y i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof x z 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof x z 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof x z i)))
(rewrite (str.substr x 1 (str.indexof x "" 0)) "")
(rewrite (str.substr x 1 (str.indexof x "" 1)) (str.substr x 1 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof x "" i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof y x 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof y x 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof y x i)))
(rewrite (str.substr x 1 (str.indexof y y 0)) "")
(rewrite (str.substr x 1 (str.indexof y y 1)) "")
(rewrite (str.substr x 1 (str.indexof y y i)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof y z 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof y z 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof y z i)))
(rewrite (str.substr x 1 (str.indexof y "" 0)) "")
(rewrite (str.substr x 1 (str.indexof y "" 1)) (str.at x (str.indexof y "" 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof y "" i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof z x 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof z x 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof z x i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof z y 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof z y 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof z y i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x 1 (str.indexof z "" i)))
(rewrite (str.substr x 1 (str.indexof "" x 0)) "")
(rewrite (str.substr x 1 (str.indexof "" x 1)) "")
(rewrite (str.substr x 1 (str.indexof "" x i)) "")
(rewrite (str.substr x 1 (str.indexof "" y 0)) "")
(rewrite (str.substr x 1 (str.indexof "" y 1)) "")
(rewrite (str.substr x 1 (str.indexof "" y i)) "")
(rewrite (str.substr x i (- 0 0)) "")
(rewrite (str.substr x i (+ 0 0)) "")
(rewrite (str.substr x i (- 0 1)) "")
(rewrite (str.substr x i (+ 0 1)) (str.substr x i 1))
(rewrite (str.substr x i (- 0 i)) "")
(rewrite (str.substr x i (+ 0 i)) (str.substr x i i))
(rewrite (str.substr x i (- 1 0)) (str.substr x i 1))
(rewrite (str.substr x i (+ 1 0)) (str.substr x i 1))
(rewrite (str.substr x i (- 1 1)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (+ 1 1)))
(rewrite (str.substr x i (- 1 i)) (str.at x (str.indexof x x i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (+ 1 i)))
(rewrite (str.substr x i (- i 0)) (str.substr x i i))
(rewrite (str.substr x i (+ i 0)) (str.substr x i i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (- i 1)))
(rewrite (str.substr x i (+ i 1)) (str.substr x i (+ 1 i)))
(rewrite (str.substr x i (- i i)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (+ i i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.len x)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.to_int x)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.len y)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.to_int y)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.len z)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.to_int z)))
(rewrite (str.substr x i (str.len "")) "")
(rewrite (str.substr x i (str.to_int "")) "")
(rewrite (str.substr x i (str.indexof x x 0)) "")
(rewrite (str.substr x i (str.indexof x x 1)) "")
(rewrite (str.substr x i (str.indexof x x i)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof x y 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof x y 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof x y i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof x z 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof x z 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof x z i)))
(rewrite (str.substr x i (str.indexof x "" 0)) "")
(rewrite (str.substr x i (str.indexof x "" 1)) (str.substr x i 1))
(rewrite (str.substr x i (str.indexof x "" i)) (str.substr x i i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof y x 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof y x 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof y x i)))
(rewrite (str.substr x i (str.indexof y y 0)) "")
(rewrite (str.substr x i (str.indexof y y 1)) "")
(rewrite (str.substr x i (str.indexof y y i)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof y z 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof y z 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof y z i)))
(rewrite (str.substr x i (str.indexof y "" 0)) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof y "" 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof y "" i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof z x 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof z x 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof z y 0)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof z y 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof z y i)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof z "" 1)))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x i (str.indexof z "" i)))
(rewrite (str.substr x i (str.indexof "" x 0)) "")
(rewrite (str.substr x i (str.indexof "" x 1)) "")
(rewrite (str.substr x i (str.indexof "" x i)) "")
(rewrite (str.substr x i (str.indexof "" y 0)) "")
(rewrite (str.substr x i (str.indexof "" y 1)) "")
(rewrite (str.substr x i (str.indexof "" y i)) "")
(rewrite (str.substr x (- 0 0) i) (str.substr x 0 i))
(rewrite (str.substr x (+ 0 0) i) (str.substr x 0 i))
(rewrite (str.substr x (- 0 1) i) "")
(rewrite (str.substr x (+ 0 1) i) (str.substr x 1 i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (- 0 i) 1))
(rewrite (str.substr x (- 0 i) i) "")
(rewrite (str.substr x (+ 0 i) i) (str.substr x i i))
(rewrite (str.substr x (- 1 0) i) (str.substr x 1 i))
(rewrite (str.substr x (+ 1 0) i) (str.substr x 1 i))
(rewrite (str.substr x (- 1 1) i) (str.substr x 0 i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (+ 1 1) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (+ 1 1) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (- 1 i) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (- 1 i) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (+ 1 i) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (+ 1 i) i))
(rewrite (str.substr x (- i 0) i) (str.substr x i i))
(rewrite (str.substr x (+ i 0) i) (str.substr x i i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (- i 1) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (- i 1) i))
(rewrite (str.substr x (+ i 1) i) (str.substr x (+ 1 i) i))
(rewrite (str.substr x (- i i) i) (str.substr x 0 i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (+ i i) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (+ i i) i))
(rewrite (str.substr x (str.len x) i) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.to_int x) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.to_int x) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.len y) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.len y) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.to_int y) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.to_int y) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.len z) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.len z) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.to_int z) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.to_int z) i))
(rewrite (str.substr x (str.len "") i) (str.substr x 0 i))
(rewrite (str.substr x (str.to_int "") i) "")
(rewrite (str.substr x (str.indexof x x 0) i) (str.substr x 0 i))
(rewrite (str.substr x (str.indexof x x 1) i) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.indexof x x i) 1))
(rewrite (str.substr x (str.indexof x x i) i) "")
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.indexof x y 0) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.indexof x y 0) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.indexof x y 1) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.indexof x y 1) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.indexof x y i) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.indexof x y i) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.indexof x z 0) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.indexof x z 0) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.indexof x z 1) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.indexof x z 1) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.indexof x z i) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.indexof x z i) i))
(rewrite (str.substr x (str.indexof x "" 0) i) (str.substr x 0 i))
(rewrite (str.substr x (str.indexof x "" 1) i) (str.substr x 1 i))
(rewrite (str.substr x (str.indexof x "" i) i) (str.substr x i i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.indexof y x 0) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.indexof y x 0) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.indexof y x 1) 1))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.indexof y x 1) i))
(define-fun f ((x String) (y String) (z String) (i Int)) String (str.substr x (str.indexof y x i) 1))
timed out
